[
    {
        "summary": "Basic Login",
        "name": "Basic Login",
        "defaultAuthenticators": {
            "1": {
                "federated": [],
                "local": [
                    "basic"
                ]
            },
            "2": {
                "federated": [],
                "local": []
            }
        },
        "code": [
            "var onLoginRequest = function(context) {",
            "    executeStep(1);",
            "};"
        ]
    },
    {
        "summary": "Prompts 2FA to the users who belongs to any of the given set of roles.",
        "preRequisites": [
            "Change the rolesList parameter to an array of roles of which users need to enforce 2FA.",
            "Modify the 1st and 2nd factor authentication option(s) from defaults as required."
        ],
        "helpLink": "https://docs.wso2.com/display/IS570/Configuring+Role-Based+Adaptive+Authentication",
        "code": [
            "// This script will step up authentication for any user belonging",
            "// to one of the given roles",
            "// If the user has any of the below roles, authentication will be stepped up",
            "var rolesToStepUp = ['admin', 'manager'];",
            "",
            "var onLoginRequest = function(context) {",
            "    executeStep(1, {",
            "        onSuccess: function (context) {",
            "            // Extracting authenticated subject from the first step",
            "            var user = context.currentKnownSubject;",
            "            // Checking if the user is assigned to one of the given roles",
            "            var hasRole = hasAnyOfTheRoles(user, rolesToStepUp);",
            "            if (hasRole) {",
            "                Log.info(user.username + ' Has one of Roles: ' + rolesToStepUp.toString());",
            "                executeStep(2);",
            "            }",
            "        }",
            "    });",
            "};"
        ],
        "defaultStepsDescription": {
            "Step 1": "Basic (Password) authenticator.",
            "Step 2": "Either of TOTP or FIDO"
        },
        "parametersDescription": {
            "rolesToStepUp": "An array of roles of which users need to enforce 2FA."
        },
        "name": "Role-Based",
        "defaultAuthenticators": {
            "1": {
                "federated": [],
                "local": [
                    "basic"
                ]
            },
            "2": {
                "federated": [],
                "local": [
                    "totp",
                    "fido"
                ]
            }
        },
        "category": "user_based",
        "title": "Role-Based 2FA Template",
        "authenticationSteps": 2
    },
    {
        "summary": "Prompts 2FA to the users who are from one of the given user store domains.",
        "preRequisites": [
            "Change the userStoresToStepUp parameter to an array of user store domains that should require 2FA.",
            "Modify the 1st and 2nd factor authentication option(s) from defaults as required."
        ],
        "helpLink": "https://docs.wso2.com/display/IS570/Configuring+User+Store-Based+Adaptive+Authentication",
        "code": [
            "// This script will prompt 2FA to the app only for a selected set of user stores.",
            "// If the user is in one of the following user stores, user will be prompted 2FA",
            "var userStoresToStepUp = ['EMPLOYEES', 'CONTRACTORS'];",
            "",
            "var onLoginRequest = function(context) {",
            "    executeStep(1, {",
            "        onSuccess: function (context) {",
            "            // Extracting user store domain of authenticated subject from the first step",
            "            var userStoreDomain = context.currentKnownSubject.userStoreDomain;",
            "            // Checking if the user is from whitelisted tenant domain",
            "            if (userStoresToStepUp.indexOf(userStoreDomain) >= 0) {",
            "                executeStep(2);",
            "            }",
            "        }",
            "    });",
            "};"
        ],
        "defaultStepsDescription": {
            "Step 1": "Basic (Password) authenticator",
            "Step 2": "TOTP authenticator"
        },
        "parametersDescription": {
            "userStoresToStepUp": "An array of user store domains of which users are required to use 2FA"
        },
        "name": "User Store-Based",
        "defaultAuthenticators": {
            "1": {
                "federated": [],
                "local": [
                    "basic"
                ]
            },
            "2": {
                "federated": [],
                "local": [
                    "totp"
                ]
            }
        },
        "category": "user_based",
        "title": "User Store-Based Authentication Template",
        "authenticationSteps": 2
    },
    {
        "summary": "Prompts 2FA to the users who are from one of the given tenants.",
        "preRequisites": [
            "Service provider should be registered as a SAAS Application.",
            "Change the tenantsToStepUp parameter to an array of tenant domains that should require 2FA.",
            "Modify the 1st and 2nd factor authentication option(s) from defaults as required."
        ],
        "helpLink": "https://docs.wso2.com/display/IS570/Configuring+Tenant-Based+Adaptive+Authentication",
        "code": [
            "// This script will prompt 2FA to the app only for a selected",
            "// set of tenants.",
            "// The app is assumed to be a SAAS app here which can be accessed by any tenant",
            "",
            "// If the user is in one of the following tenants, user will be prompted 2FA",
            "var tenantsToStepUp = ['abc.com', 'xyz.com'];",
            "",
            "var onLoginRequest = function(context) {",
            "    executeStep(1, {",
            "        onSuccess: function (context) {",
            "            // Extracting tenant domain of authenticated subject from the first step",
            "            var userTenantDomain = context.currentKnownSubject.tenantDomain;",
            "            // Checking if the user is from whitelisted tenant domain",
            "            if (tenantsToStepUp.indexOf(userTenantDomain) >= 0) {",
            "                executeStep(2);",
            "            }",
            "        }",
            "    });",
            "};"
        ],
        "defaultStepsDescription": {
            "Step 1": "Basic (Password) authenticator",
            "Step 2": "TOTP authenticator"
        },
        "parametersDescription": {
            "tenantsToStepUp": "An array of tenants of which users are required to use 2FA"
        },
        "name": "Tenant-Based",
        "defaultAuthenticators": {
            "1": {
                "federated": [],
                "local": [
                    "basic"
                ]
            },
            "2": {
                "federated": [],
                "local": [
                    "totp"
                ]
            }
        },
        "category": "user_based",
        "title": "Tenant-Based Authentication Template",
        "authenticationSteps": 2
    }
]